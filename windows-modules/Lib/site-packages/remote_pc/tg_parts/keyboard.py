import sys

import json
from remote_pc.bot_parts import settings

import platform
from aiogram import Bot, Dispatcher, executor, types 

def main_menu():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="🖥", callback_data=json.dumps({"type": "sys_menu", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🌐", callback_data=json.dumps({"type": "net_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    key4 = types.InlineKeyboardButton(text="🎮", callback_data=json.dumps({"type": "progs_menu", "act": "check"}))
    key5 = types.InlineKeyboardButton(text="⚙️", callback_data=json.dumps({"type": "opts", "act": "check"}))
    key6 = types.InlineKeyboardButton(text="➡️", callback_data=json.dumps({"type": "etc_menu", "act": "check"}))
    keys.add(key4, key5, key6)
    return keys

def sys_menu():
    keys = types.InlineKeyboardMarkup(row_width=4)
    key1 = types.InlineKeyboardButton(text="🖥", callback_data=json.dumps({"type": "sys_menu", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🔄", callback_data=json.dumps({"type": "sys_menu", "act": "upd"}))
    key3 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key4 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3, key4)
    return keys

def net_menu():
    keys = types.InlineKeyboardMarkup(row_width=4)
    key1 = types.InlineKeyboardButton(text="🖥", callback_data=json.dumps({"type": "net_menu", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🔄", callback_data=json.dumps({"type": "net_menu", "act": "upd"}))
    key3 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key4 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3, key4)
    return keys

def progs_menu(): 
    keys = types.InlineKeyboardMarkup(row_width=4)
    key1 = types.InlineKeyboardButton(text="🎮➕", callback_data=json.dumps({"type": "progs_menu", "act": "add"}))
    key2 = types.InlineKeyboardButton(text="🎮➖", callback_data=json.dumps({"type": "progs_menu", "act": "delete_0"}))
    key3 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key4 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3, key4)
    key4 = types.InlineKeyboardButton(text="🕹", callback_data=json.dumps({"type": "progs_menu", "act": "list"}))
    keys.add(key4)
    return keys

def progs_add():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "progs_menu", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))  
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    return keys

def etc_menu(): 
    keys = types.InlineKeyboardMarkup(row_width=4)
    key1 = types.InlineKeyboardButton(text="📸", callback_data=json.dumps({"type": "screen_menu", "act": "take"}))
    key2 = types.InlineKeyboardButton(text="📝", callback_data=json.dumps({"type": "note_menu", "act": "write"}))
    key3 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key4 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3, key4)
    return keys

def screen_menu(): 
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "etc_menu", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    key4 = types.InlineKeyboardButton(text="📸", callback_data=json.dumps({"type": "screen_menu", "act": "take"}))
    keys.add(key4)
    return keys

def note_menu_0():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "etc_menu", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    return keys

def note_menu_1():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "etc_menu", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    key4 = types.InlineKeyboardButton(text="🆗", callback_data=json.dumps({"type": "note_menu", "act": "done"}))
    keys.add(key4)
    return keys

def note_menu_2():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "etc_menu", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    return keys

def opts(): 
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    key4 = types.InlineKeyboardButton(text="🖥⚙️", callback_data=json.dumps({"type": "machine_opts", "act": "check"}))
    key5 = types.InlineKeyboardButton(text="🤖⚙️", callback_data=json.dumps({"type": "bot_opts", "act": "check"}))
    key6 = types.InlineKeyboardButton(text="👤⚙️", callback_data=json.dumps({"type": "access_opts", "act": "check"}))
    keys.add(key4, key5, key6)
    return keys

def machine_opts():
    keys = types.InlineKeyboardMarkup(row_width=4)
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "opts", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    key4 = types.InlineKeyboardButton(text="🖥⚙️", callback_data=json.dumps({"type": "machine_opts", "act": "sys"}))
    key5 = types.InlineKeyboardButton(text="🌐⚙️", callback_data=json.dumps({"type": "machine_opts", "act": "net"}))
    key6 = types.InlineKeyboardButton(text="🖥⭕️", callback_data=json.dumps({"type": "machine_opts", "act": "off"}))
    key7 = types.InlineKeyboardButton(text="🖥🔄", callback_data=json.dumps({"type": "machine_opts", "act": "reload"}))
    keys.add(key4, key5, key6, key7)
    return keys

def machine_act():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "machine_opts", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))  
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    return keys


def bot_opts():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "opts", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    key4 = types.InlineKeyboardButton(text="🗃", callback_data=json.dumps({"type": "bot_opts", "act": "log"}))
    key5 = types.InlineKeyboardButton(text="🤖⭕️", callback_data=json.dumps({"type": "bot_opts", "act": "off"}))
    keys.add(key4, key5)
    return keys

def access_opts():
    keys = types.InlineKeyboardMarkup(row_width=3)
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "opts", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    key4 = types.InlineKeyboardButton(text="🖥", callback_data=json.dumps({"type": "sys_perm", "act": "check"}))
    key5 = types.InlineKeyboardButton(text="🌐", callback_data=json.dumps({"type": "net_perm", "act": "check"}))
    key6 = types.InlineKeyboardButton(text="🎮", callback_data=json.dumps({"type": "progs_perm", "act": "check"}))
    key7 = types.InlineKeyboardButton(text="📸", callback_data=json.dumps({"type": "screen_perm", "act": "check"}))
    key8 = types.InlineKeyboardButton(text="📝", callback_data=json.dumps({"type": "note_perm", "act": "check"}))
    key9 = types.InlineKeyboardButton(text="🔔", callback_data=json.dumps({"type": "notify_perm", "act": "check"}))
    key10 = types.InlineKeyboardButton(text="🖥⚙️", callback_data=json.dumps({"type": "machine_perm", "act": "check"}))
    key11 = types.InlineKeyboardButton(text="🤖⚙️", callback_data=json.dumps({"type": "bot_perm", "act": "check"}))
    key12 = types.InlineKeyboardButton(text="👤⚙️", callback_data=json.dumps({"type": "access_perm", "act": "check"}))
    keys.add(key1, key2, key3, key4, key5, key6, key7, key8, key9, key10, key11, key12)
    key13 = types.InlineKeyboardButton(text="🤖❌", callback_data=json.dumps({"type": "config_opts", "act": "delete_0"}))
    keys.add(key13)
    return keys

def sys_perm():
    keys = types.InlineKeyboardMarkup(row_width=3)
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "access_opts", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    key4 = types.InlineKeyboardButton(text="👤➕", callback_data=json.dumps({"type": "sys_perm", "act": "add"}))
    key5 = types.InlineKeyboardButton(text="🖥🔒", callback_data=json.dumps({"type": "sys_perm", "act": "info"}))
    key6 = types.InlineKeyboardButton(text="👤➖", callback_data=json.dumps({"type": "sys_perm", "act": "delete_0"}))
    keys.add(key1, key2, key3, key4, key5, key6)
    return keys

def sys_perm_add():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "sys_perm", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))  
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    return keys

def net_perm():
    keys = types.InlineKeyboardMarkup(row_width=3)
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "access_opts", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    key4 = types.InlineKeyboardButton(text="👤➕", callback_data=json.dumps({"type": "net_perm", "act": "add"}))
    key5 = types.InlineKeyboardButton(text="🖥🔒", callback_data=json.dumps({"type": "net_perm", "act": "info"}))
    key6 = types.InlineKeyboardButton(text="👤➖", callback_data=json.dumps({"type": "net_perm", "act": "delete_0"}))
    keys.add(key1, key2, key3, key4, key5, key6)
    return keys

def net_perm_add():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "net_perm", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))  
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    return keys

def progs_perm():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "access_opts", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    key4 = types.InlineKeyboardButton(text="👤➕", callback_data=json.dumps({"type": "progs_perm", "act": "add"}))
    key5 = types.InlineKeyboardButton(text="👤➖", callback_data=json.dumps({"type": "progs_perm", "act": "delete_0"}))
    keys.add(key4, key5)
    return keys

def progs_perm_add():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "progs_perm", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))  
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    return keys

def screen_perm():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "access_opts", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    key4 = types.InlineKeyboardButton(text="👤➕", callback_data=json.dumps({"type": "screen_perm", "act": "add"}))
    key5 = types.InlineKeyboardButton(text="👤➖", callback_data=json.dumps({"type": "screen_perm", "act": "delete_0"}))
    keys.add(key4, key5)
    return keys

def screen_perm_add():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "screen_perm", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))  
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    return keys

def note_perm():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "access_opts", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    key4 = types.InlineKeyboardButton(text="👤➕", callback_data=json.dumps({"type": "note_perm", "act": "add"}))
    key5 = types.InlineKeyboardButton(text="👤➖", callback_data=json.dumps({"type": "note_perm", "act": "delete_0"}))
    keys.add(key4, key5)
    return keys

def note_perm_add():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "note_perm", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))  
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    return keys

def machine_perm():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "access_opts", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    key4 = types.InlineKeyboardButton(text="👤➕", callback_data=json.dumps({"type": "machine_perm", "act": "add"}))
    key5 = types.InlineKeyboardButton(text="👤➖", callback_data=json.dumps({"type": "machine_perm", "act": "delete_0"}))
    keys.add(key4, key5)
    return keys

def machine_perm_add():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "machine_perm", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))  
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    return keys

def notify_perm():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "access_opts", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    key4 = types.InlineKeyboardButton(text="👤➕", callback_data=json.dumps({"type": "notify_perm", "act": "add"}))
    key5 = types.InlineKeyboardButton(text="👤➖", callback_data=json.dumps({"type": "notify_perm", "act": "delete_0"}))
    keys.add(key4, key5)
    return keys

def notify_perm_add():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "notify_perm", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))  
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    return keys

def bot_perm():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "access_opts", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    key4 = types.InlineKeyboardButton(text="👤➕", callback_data=json.dumps({"type": "bot_perm", "act": "add"}))
    key5 = types.InlineKeyboardButton(text="👤➖", callback_data=json.dumps({"type": "bot_perm", "act": "delete_0"}))
    keys.add(key4, key5)
    return keys

def bot_perm_add():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "bot_perm", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))  
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    return keys

def access_perm():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "access_opts", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    key4 = types.InlineKeyboardButton(text="👤➕", callback_data=json.dumps({"type": "access_perm", "act": "add"}))
    key5 = types.InlineKeyboardButton(text="👤➖", callback_data=json.dumps({"type": "access_perm", "act": "delete_0"}))
    keys.add(key4, key5)
    return keys

def access_perm_add():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "access_perm", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))  
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    return keys

def config_opts():
    keys = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": "access_opts", "act": "check"}))
    key2 = types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"}))  
    key3 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2, key3)
    key4 = types.InlineKeyboardButton(text="Да", callback_data=json.dumps({"type": "config_opts", "act": "delete"}))
    key5 = types.InlineKeyboardButton(text="Нет", callback_data=json.dumps({"type": "access_opts", "act": "check"}))
    keys.add(key4, key5)
    return keys

def private():
    keys = types.InlineKeyboardMarkup() 
    key1 = types.InlineKeyboardButton(text="💬", url=f'https://t.me/{settings.json_config_parse()["bot_options"]["username"]}')
    key2 = types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    keys.add(key1, key2)
    return keys

def dynamic_keyboard(menu_type, target, act, count=0, step=5): #open #remove
    config = settings.json_config_parse()
    if target == "progs":
        keys = [[str(name), None, json.dumps({"type": "progs_menu", "act": str(act), "id": str(config["machine_options"][target][str(platform.uname()[0])][name]["id"])})] for name in config["machine_options"][str(target)][str(platform.uname()[0])]]       
    elif target in ["sys_menu", "net_menu"]:
        keys = [[str(user), None, json.dumps({"type": str(menu_type), "act": str(act), "id": str(user)})] for user in config["permissions"][target]["upd"]]
    else:
        keys = [[str(user), None, json.dumps({"type": str(menu_type), "act": str(act), "id": str(user)})] for user in config["permissions"][target]]
    pages = pagebuilder(keys, menu_type, act, count, step)
    return pages

def pagebuilder(keys, menu_type, act, count, step):
    keyboard = types.InlineKeyboardMarkup(row_width=4)
    keyboard.add(
        types.InlineKeyboardButton(text="⬅️", callback_data=json.dumps({"type": str(menu_type), "act": "check"})),
        types.InlineKeyboardButton(text="🏠", callback_data=json.dumps({"type": "bot_menu", "act": "check"})),
        types.InlineKeyboardButton(text="❌", callback_data=json.dumps({"type": "bot_menu", "act": "delete"}))
    )
    if len(keys) > 0:
        gen_page = [keys[i:i+step] for i in range(0, len(keys), step)]
        for rows in gen_page[count]:
            keyboard.add(types.InlineKeyboardButton(text=rows[0], url=rows[1], callback_data=rows[2]))
        keyboard.add(types.InlineKeyboardButton(text=f"{count+1}/{((len(keys)-1)//step)+1}", callback_data=json.dumps({"type": str(menu_type), "act": str(act), "page": str(count)})))
        controls_bar = []
        if count > 1:
            controls_bar.append(types.InlineKeyboardButton(text="⬅️⬅️", callback_data=json.dumps({"type": str(menu_type), "act": str(act), "page": "0"})))
        if count != 0:
            controls_bar.append(types.InlineKeyboardButton(text = "⬅️", callback_data=json.dumps({"type": str(menu_type), "act": str(act), "page": str(count-1)})))
        if len(gen_page) > count + 1:
            controls_bar.append(types.InlineKeyboardButton(text="➡️", callback_data=json.dumps({"type": str(menu_type), "act": str(act), "page": str(count+1)})))
        if (((len(keys)-1)//step)+1) > 2 and (count+1) != (((len(keys)-1)//step)+1):
            controls_bar.append(types.InlineKeyboardButton(text="➡️➡️", callback_data=json.dumps({"type": str(menu_type), "act": str(act), "page": str((((len(keys)-1)//step)))})))
        keyboard.add(*controls_bar)
    else:
        keyboard.add(types.InlineKeyboardButton(text="Список пуст.", callback_data=json.dumps({"type": str(menu_type), "act": str(act), "page": str(count)})))
    return keyboard